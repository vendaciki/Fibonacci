from functools import lru_cache

@lru_cache(maxsize=None)
def fib(n, mod):
    if n <= 1:
        return n
    if n % 2:
        m = (n + 1) // 2
        return (fib(m, mod) ** 2 + fib(m - 1, mod) ** 2) % mod
    else:
        m = n // 2
        return ((2 * fib(m - 1, mod) + fib(m, mod)) * fib(m, mod)) % mod

def main():
    n = 16180339887498948482045868343656381177203091798057628621354486227052604628189024497072072041893911374848290908
    print(fib(n, 10000000))

if __name__ == '__main__':
    main()
